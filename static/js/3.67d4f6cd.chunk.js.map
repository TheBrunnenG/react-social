{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","css","descriptionBlock","fullName","aboutMe","src","photos","large","Preloader","Post","item","message","likes","MyPosts","React","memo","postsElements","postsData","map","p","postsBlock","AddNewPostReduxForm","onSubmit","values","addPost","newPostText","posts","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.67d4f6cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3TVgh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__P9VNh\",\"posts\":\"MyPosts_posts__3Xiqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2d9P6\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport css from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={css.descriptionBlock}>\r\n                Имя: {profile.fullName}\r\n                <br/>\r\n                Обо мне: {profile.aboutMe}\r\n                <br/>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport css from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={css.item}>\r\n            <img src='https://upl.stack.com/wp-content/uploads/2016/10/31105245/GSSI-Lab-at-IMG-Academy-STACK.jpg' />\r\n            {props.message}\r\n            <div>\r\n                <span>Likes ♥ {props.likes}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport css from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.postsData\r\n        .map(p => <Post message={p.message} likes={p.likes}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={css.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={css.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={\"newPostText\"}\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: 'postAddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}