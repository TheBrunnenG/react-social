{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","css","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsPage","dialogsData","map","d","key","messagesElements","messagesData","m","isAuth","dialogs","dialogsItems","messages","values","sendMessage","newMessageText","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCanKC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAIC,OAAS,IAAMD,IAAIE,QACnC,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCEvBC,EARC,SAACT,GACb,OACI,yBAAKG,UAAWC,IAAIC,QACfL,EAAMU,U,yCCDbC,EAAcC,YAAiB,IAkBtBC,cAAU,CACrBC,KAAM,wBADKD,EAhBQ,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBH,KAAM,iBACNc,YAAa,wBAExB,6BACI,qDCiBDC,EA1BC,SAACvB,GAEb,IAAIwB,EAAkBxB,EAAMyB,YAAYC,YACnCC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMN,GAAI0B,EAAE1B,GAAI2B,IAAKD,EAAE1B,QACrD4B,EAAmB9B,EAAMyB,YAAYM,aACpCJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAASmB,IAAKG,EAAE9B,QAMlD,OAAKF,EAAMiC,OAGP,yBAAK9B,UAAWC,IAAI8B,SAChB,yBAAK/B,UAAWC,IAAI+B,cACfX,GAEL,yBAAKrB,UAAWC,IAAIgC,UACfN,EACD,kBAAC,EAAD,CAAgBf,SAbR,SAACsB,GACjBrC,EAAMsC,YAAYD,EAAOE,qBAGH,kBAAC,IAAD,CAAUhC,GAAI,Y,wCCfxCiC,EAA6B,SAACC,GAAD,MAAY,CACzCR,OAAQQ,EAAMC,KAAKT,S,OCgBRU,sBACXC,aAfoB,SAACH,GACrB,MAAO,CACHhB,YAAagB,EAAMhB,gBAIA,SAACoB,GACxB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAwBP,UDRb,SAACQ,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKjD,MAAMiC,OACT,kBAACc,EAAcE,KAAKjD,OADI,kBAAC,IAAD,CAAUO,GAAI,eAJV,GAEX2C,IAAMH,WAStC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCI9DL,CAGbpB","file":"static/js/4.2dd97921.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__oFhPC\",\"dialogsItems\":\"Dialogs_dialogsItems__z2swP\",\"active\":\"Dialogs_active__1z-jr\",\"messages\":\"Dialogs_messages__3wSV2\",\"message\":\"Dialogs_message__1urKF\"};","import React from \"react\";\r\nimport css from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={css.dialog + ' ' + css.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport css from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={css.dialog}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name={\"newMessageText\"}\r\n                       placeholder={\"Enter your message\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm);","import React from \"react\";\r\nimport css from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogsData\r\n        .map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    let messagesElements = props.dialogsPage.messagesData\r\n        .map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={css.dialogs}>\r\n            <div className={css.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={css.messages}>\r\n                {messagesElements}\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}